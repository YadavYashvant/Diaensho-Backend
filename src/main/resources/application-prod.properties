spring.application.name=diaensho-backend

# Database Configuration (using environment variables for production)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://pg-27c89fc-lirice.b.aivencloud.com:16806/defaultdb?sslmode=require}
spring.datasource.username=${DATABASE_USERNAME:avnadmin}
spring.datasource.password=${DATABASE_PASSWORD:AVNS_axf0eg5kjmzrNIH4fib}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Gemini AI Configuration
gemini.api.key=${GEMINI_API_KEY:AIzaSyAnCvX2Ml_DAnVAen2TyE1I9ZWvxXy9Ddg}

# JWT Configuration
jwt.secret=${JWT_SECRET:diaensho_secret_key_that_is_long_enough_for_hmac_sha256_algorithm}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Actuator Configuration for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# Logging Configuration for Production
logging.level.com.example.diaensho_backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
